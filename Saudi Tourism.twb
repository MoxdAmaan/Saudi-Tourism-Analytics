<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.25.0623.1428                               -->
<workbook original-version='18.1' source-build='2024.2.12 (20242.25.0623.1428)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='SaudiArabiaTourism' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Select Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Tourists Number&quot;'>
        <calculation class='tableau' formula='&quot;Tourists Number&quot;' />
        <members>
          <member value='&quot;Tourists Number&quot;' />
          <member value='&quot;Tourists Spending&quot;' />
          <member value='&quot;Avg Stay&quot;' />
          <member value='&quot;Avg Spending Trip&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='saudi_Tourism_Data_final' inline='true' name='federated.018gl0y092k29o1981vhw11o8vny' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='saudi_Tourism_Data_final' name='textscan.1ncyztm0c734e0119auvc11j4ns7'>
            <connection class='textscan' directory='/Users/apple/Desktop/Saudi Tourism Project' filename='saudi_Tourism_Data_final.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ncyztm0c734e0119auvc11j4ns7' name='saudi_Tourism_Data_final.csv' table='[saudi_Tourism_Data_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='YEARS' ordinal='0' />
            <column datatype='integer' name='Tourists_Number' ordinal='1' />
            <column datatype='integer' name='Overnight_Stay' ordinal='2' />
            <column datatype='integer' name='Tourists_Spending' ordinal='3' />
            <column datatype='integer' name='Avg_Stay' ordinal='4' />
            <column datatype='integer' name='Avg_Spending_Trip' ordinal='5' />
            <column datatype='integer' name='Avg_Spending_Night' ordinal='6' />
            <column datatype='string' name='Province' ordinal='7' />
            <column datatype='string' name='Tourism_Type' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ncyztm0c734e0119auvc11j4ns7' name='saudi_Tourism_Data_final.csv' table='[saudi_Tourism_Data_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='YEARS' ordinal='0' />
            <column datatype='integer' name='Tourists_Number' ordinal='1' />
            <column datatype='integer' name='Overnight_Stay' ordinal='2' />
            <column datatype='integer' name='Tourists_Spending' ordinal='3' />
            <column datatype='integer' name='Avg_Stay' ordinal='4' />
            <column datatype='integer' name='Avg_Spending_Trip' ordinal='5' />
            <column datatype='integer' name='Avg_Spending_Night' ordinal='6' />
            <column datatype='string' name='Province' ordinal='7' />
            <column datatype='string' name='Tourism_Type' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[saudi_Tourism_Data_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEARS</remote-name>
            <remote-type>133</remote-type>
            <local-name>[YEARS]</local-name>
            <parent-name>[saudi_Tourism_Data_final.csv]</parent-name>
            <remote-alias>YEARS</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourists_Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourists_Number]</local-name>
            <parent-name>[saudi_Tourism_Data_final.csv]</parent-name>
            <remote-alias>Tourists_Number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Overnight_Stay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Overnight_Stay]</local-name>
            <parent-name>[saudi_Tourism_Data_final.csv]</parent-name>
            <remote-alias>Overnight_Stay</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourists_Spending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourists_Spending]</local-name>
            <parent-name>[saudi_Tourism_Data_final.csv]</parent-name>
            <remote-alias>Tourists_Spending</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Stay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg_Stay]</local-name>
            <parent-name>[saudi_Tourism_Data_final.csv]</parent-name>
            <remote-alias>Avg_Stay</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Spending_Trip</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg_Spending_Trip]</local-name>
            <parent-name>[saudi_Tourism_Data_final.csv]</parent-name>
            <remote-alias>Avg_Spending_Trip</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Spending_Night</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Avg_Spending_Night]</local-name>
            <parent-name>[saudi_Tourism_Data_final.csv]</parent-name>
            <remote-alias>Avg_Spending_Night</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[saudi_Tourism_Data_final.csv]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism_Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tourism_Type]</local-name>
            <parent-name>[saudi_Tourism_Data_final.csv]</parent-name>
            <remote-alias>Tourism_Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Avg Spending Night' datatype='integer' name='[Avg_Spending_Night]' role='measure' type='quantitative' />
      <column caption='Avg Spending Trip' datatype='integer' name='[Avg_Spending_Trip]' role='measure' type='quantitative' />
      <column caption='Avg Stay' datatype='integer' name='[Avg_Stay]' role='measure' type='quantitative' />
      <column caption='Selected Metric' datatype='real' name='[Calculation_413134956029976576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;    WHEN &quot;Tourists Number&quot; THEN SUM([Tourists_Number])&#10;    WHEN &quot;Tourists Spending&quot; THEN SUM([Tourists_Spending])&#10;    WHEN &quot;Avg Stay&quot; THEN AVG([Avg_Stay])&#10;    WHEN &quot;Avg Spending Trip&quot; THEN AVG([Avg_Spending_Trip])&#10;END' />
      </column>
      <column caption='Average Stay' datatype='real' name='[Calculation_413134956037373953]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Avg_Stay] * [Tourists_Number]) / SUM([Tourists_Number])' />
      </column>
      <column caption='Average Spending per Trip' datatype='real' name='[Calculation_413134956037521410]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Avg_Spending_Trip] * [Tourists_Number]) / SUM([Tourists_Number])' />
      </column>
      <column caption='Overnight Stay' datatype='integer' name='[Overnight_Stay]' role='measure' type='quantitative' />
      <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Albaha&quot;' value='&quot;Al-Baha&quot;' />
          <semantic-value key='&quot;Alqassim&quot;' value='&quot;Al-Qaseem&quot;' />
          <semantic-value key='&quot;Aseer&quot;' value='&quot;Aseer&quot;' />
          <semantic-value key='&quot;Eastern_region&quot;' value='&quot;Eastern Region&quot;' />
          <semantic-value key='&quot;Hail&quot;' value='&quot;Hail&quot;' />
          <semantic-value key='&quot;Jazan&quot;' value='&quot;Jazan&quot;' />
          <semantic-value key='&quot;Jouf&quot;' value='&quot;Al-Jouf&quot;' />
          <semantic-value key='&quot;Madinah&quot;' value='&quot;Al Madinah&quot;' />
          <semantic-value key='&quot;Makkah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
          <semantic-value key='&quot;Najran&quot;' value='&quot;Najran&quot;' />
          <semantic-value key='&quot;Northern_borders&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
          <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
          <semantic-value key='&quot;Tabuk&quot;' value='&quot;Tabouk&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Tabuk&quot;' value='&quot;Saudi Arabia&quot;' />
        </semantic-values>
      </column>
      <column caption='Tourism Type' datatype='string' name='[Tourism_Type]' role='dimension' type='nominal' />
      <column caption='Tourists Number' datatype='integer' name='[Tourists_Number]' role='measure' type='quantitative' />
      <column caption='Tourists Spending' datatype='integer' name='[Tourists_Spending]' role='measure' type='quantitative' />
      <column caption='Years' datatype='date' name='[YEARS]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='saudi_Tourism_Data_final.csv' datatype='table' name='[__tableau_internal_object_id__].[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]' role='measure' type='quantitative' />
      <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
      <column-instance column='[Tourism_Type]' derivation='None' name='[none:Tourism_Type:nk]' pivot='key' type='nominal' />
      <column-instance column='[YEARS]' derivation='Year-Trunc' name='[tyr:YEARS:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/apple/Desktop/Data Analysis Project/1 Emirates Tableau Project/saudi_Tourism_Data_final.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/01/2025 07:04:53 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='saudi_Tourism_Data_final' increment-value='%null%' refresh-type='create' rows-inserted='1030' timestamp-start='2025-10-01 07:04:53.618' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>YEARS</remote-name>
              <remote-type>133</remote-type>
              <local-name>[YEARS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YEARS</remote-alias>
              <ordinal>0</ordinal>
              <family>saudi_Tourism_Data_final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tourists_Number</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tourists_Number]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tourists_Number</remote-alias>
              <ordinal>1</ordinal>
              <family>saudi_Tourism_Data_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>645</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Overnight_Stay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Overnight_Stay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Overnight_Stay</remote-alias>
              <ordinal>2</ordinal>
              <family>saudi_Tourism_Data_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>851</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tourists_Spending</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tourists_Spending]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tourists_Spending</remote-alias>
              <ordinal>3</ordinal>
              <family>saudi_Tourism_Data_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>721</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Avg_Stay</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Avg_Stay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Avg_Stay</remote-alias>
              <ordinal>4</ordinal>
              <family>saudi_Tourism_Data_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>53</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Avg_Spending_Trip</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Avg_Spending_Trip]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Avg_Spending_Trip</remote-alias>
              <ordinal>5</ordinal>
              <family>saudi_Tourism_Data_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>864</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Avg_Spending_Night</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Avg_Spending_Night]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Avg_Spending_Night</remote-alias>
              <ordinal>6</ordinal>
              <family>saudi_Tourism_Data_final.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>512</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Province</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Province</remote-alias>
              <ordinal>7</ordinal>
              <family>saudi_Tourism_Data_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tourism_Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Tourism_Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tourism_Type</remote-alias>
              <ordinal>8</ordinal>
              <family>saudi_Tourism_Data_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[none:Province:nk]'>
          <groupfilter function='level-members' level='[none:Province:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
        <filter class='categorical' column='[none:Tourism_Type:nk]'>
          <groupfilter function='level-members' level='[none:Tourism_Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </filter>
        <filter class='quantitative' column='[tyr:YEARS:qk]' included-values='in-range'>
          <min>#2015-01-01 00:00:00#</min>
          <max>#2024-01-01 00:00:00#</max>
        </filter>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Province:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Makkah&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albaha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hail&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tabuk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Najran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jazan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alqassim&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jouf&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern_borders&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madinah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aseer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Riyadh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eastern_region&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Tourism_Type:nk]' type='palette'>
            <map to='#308344'>
              <bucket>&quot;Domestic&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;Inbound&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Saudi Arabia&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Tourists Number&quot;'>
          <calculation class='tableau' formula='&quot;Tourists Number&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='saudi_Tourism_Data_final.csv' id='saudi_Tourism_Data_final.csv_1DDBD7AB80974D658E5C6FDB986D3A75'>
            <properties context=''>
              <relation connection='textscan.1ncyztm0c734e0119auvc11j4ns7' name='saudi_Tourism_Data_final.csv' table='[saudi_Tourism_Data_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='date' name='YEARS' ordinal='0' />
                  <column datatype='integer' name='Tourists_Number' ordinal='1' />
                  <column datatype='integer' name='Overnight_Stay' ordinal='2' />
                  <column datatype='integer' name='Tourists_Spending' ordinal='3' />
                  <column datatype='integer' name='Avg_Stay' ordinal='4' />
                  <column datatype='integer' name='Avg_Spending_Trip' ordinal='5' />
                  <column datatype='integer' name='Avg_Spending_Night' ordinal='6' />
                  <column datatype='string' name='Province' ordinal='7' />
                  <column datatype='string' name='Tourism_Type' ordinal='8' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.018gl0y092k29o1981vhw11o8vny'>
      <datasources>
        <datasource caption='saudi_Tourism_Data_final' name='federated.018gl0y092k29o1981vhw11o8vny' />
      </datasources>
      <datasource-dependencies datasource='federated.018gl0y092k29o1981vhw11o8vny'>
        <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Albaha&quot;' value='&quot;Al-Baha&quot;' />
            <semantic-value key='&quot;Alqassim&quot;' value='&quot;Al-Qaseem&quot;' />
            <semantic-value key='&quot;Aseer&quot;' value='&quot;Aseer&quot;' />
            <semantic-value key='&quot;Eastern_region&quot;' value='&quot;Eastern Region&quot;' />
            <semantic-value key='&quot;Hail&quot;' value='&quot;Hail&quot;' />
            <semantic-value key='&quot;Jazan&quot;' value='&quot;Jazan&quot;' />
            <semantic-value key='&quot;Jouf&quot;' value='&quot;Al-Jouf&quot;' />
            <semantic-value key='&quot;Madinah&quot;' value='&quot;Al Madinah&quot;' />
            <semantic-value key='&quot;Makkah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
            <semantic-value key='&quot;Najran&quot;' value='&quot;Najran&quot;' />
            <semantic-value key='&quot;Northern_borders&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
            <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
            <semantic-value key='&quot;Tabuk&quot;' value='&quot;Tabouk&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;Tabuk&quot;' value='&quot;Saudi Arabia&quot;' />
          </semantic-values>
        </column>
        <column caption='Tourism Type' datatype='string' name='[Tourism_Type]' role='dimension' type='nominal' />
        <column caption='Years' datatype='date' name='[YEARS]' role='dimension' type='ordinal' />
        <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
        <column-instance column='[Tourism_Type]' derivation='None' name='[none:Tourism_Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[YEARS]' derivation='Year-Trunc' name='[tyr:YEARS:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]'>
        <groupfilter function='level-members' level='[none:Province:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]'>
        <groupfilter function='level-members' level='[none:Tourism_Type:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' included-values='in-range'>
        <min>#2015-01-01 00:00:00#</min>
        <max>#2024-01-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Average stay by province'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#005430'>Avg Stay By Province</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='saudi_Tourism_Data_final' name='federated.018gl0y092k29o1981vhw11o8vny' />
          </datasources>
          <datasource-dependencies datasource='federated.018gl0y092k29o1981vhw11o8vny'>
            <column caption='Avg Stay' datatype='integer' name='[Avg_Stay]' role='measure' type='quantitative' />
            <column caption='Average Stay' datatype='real' name='[Calculation_413134956037373953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Avg_Stay] * [Tourists_Number]) / SUM([Tourists_Number])' />
            </column>
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Albaha&quot;' value='&quot;Al-Baha&quot;' />
                <semantic-value key='&quot;Alqassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Aseer&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Eastern_region&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hail&quot;' value='&quot;Hail&quot;' />
                <semantic-value key='&quot;Jazan&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Jouf&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Madinah&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Makkah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Najran&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Northern_borders&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Tabouk&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column caption='Tourism Type' datatype='string' name='[Tourism_Type]' role='dimension' type='nominal' />
            <column caption='Tourists Number' datatype='integer' name='[Tourists_Number]' role='measure' type='quantitative' />
            <column caption='Years' datatype='date' name='[YEARS]' role='dimension' type='ordinal' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism_Type]' derivation='None' name='[none:Tourism_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEARS]' derivation='Year-Trunc' name='[tyr:YEARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_413134956037373953]' derivation='User' name='[usr:Calculation_413134956037373953:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037373953:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037373953:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037373953:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037373953:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037373953:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#205132' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037373953:qk]</rows>
        <cols>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</cols>
      </table>
      <simple-id uuid='{D5509CDE-539C-4148-BB7C-9C9D543DE24E}' />
    </worksheet>
    <worksheet name='Avg Stay vs. Avg Spending Scatter'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#205132' fontname='Benton Sans Book'>Avg Stay vs. Avg Spending Scatter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='saudi_Tourism_Data_final' name='federated.018gl0y092k29o1981vhw11o8vny' />
          </datasources>
          <datasource-dependencies datasource='federated.018gl0y092k29o1981vhw11o8vny'>
            <column caption='Avg Spending Trip' datatype='integer' name='[Avg_Spending_Trip]' role='measure' type='quantitative' />
            <column caption='Avg Stay' datatype='integer' name='[Avg_Stay]' role='measure' type='quantitative' />
            <column caption='Average Stay' datatype='real' name='[Calculation_413134956037373953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Avg_Stay] * [Tourists_Number]) / SUM([Tourists_Number])' />
            </column>
            <column caption='Average Spending per Trip' datatype='real' name='[Calculation_413134956037521410]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Avg_Spending_Trip] * [Tourists_Number]) / SUM([Tourists_Number])' />
            </column>
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Albaha&quot;' value='&quot;Al-Baha&quot;' />
                <semantic-value key='&quot;Alqassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Aseer&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Eastern_region&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hail&quot;' value='&quot;Hail&quot;' />
                <semantic-value key='&quot;Jazan&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Jouf&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Madinah&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Makkah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Najran&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Northern_borders&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Tabouk&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column caption='Tourism Type' datatype='string' name='[Tourism_Type]' role='dimension' type='nominal' />
            <column caption='Tourists Number' datatype='integer' name='[Tourists_Number]' role='measure' type='quantitative' />
            <column caption='Years' datatype='date' name='[YEARS]' role='dimension' type='ordinal' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism_Type]' derivation='None' name='[none:Tourism_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEARS]' derivation='Year-Trunc' name='[tyr:YEARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_413134956037373953]' derivation='User' name='[usr:Calculation_413134956037373953:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_413134956037521410]' derivation='User' name='[usr:Calculation_413134956037521410:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' />
              <text column='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='735' />
                <format attr='maxwidth' value='735' />
                <format attr='minheight' value='626' />
                <format attr='maxheight' value='626' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037373953:qk]</rows>
        <cols>[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037521410:qk]</cols>
      </table>
      <simple-id uuid='{6C191ECD-79C8-4599-B8DE-1E5C7351DC4B}' />
    </worksheet>
    <worksheet name='KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='saudi_Tourism_Data_final' name='federated.018gl0y092k29o1981vhw11o8vny' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Tourists Number&quot;'>
              <calculation class='tableau' formula='&quot;Tourists Number&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.018gl0y092k29o1981vhw11o8vny'>
            <column caption='Avg Spending Trip' datatype='integer' name='[Avg_Spending_Trip]' role='measure' type='quantitative' />
            <column caption='Avg Stay' datatype='integer' name='[Avg_Stay]' role='measure' type='quantitative' />
            <column caption='Selected Metric' datatype='real' name='[Calculation_413134956029976576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;    WHEN &quot;Tourists Number&quot; THEN SUM([Tourists_Number])&#10;    WHEN &quot;Tourists Spending&quot; THEN SUM([Tourists_Spending])&#10;    WHEN &quot;Avg Stay&quot; THEN AVG([Avg_Stay])&#10;    WHEN &quot;Avg Spending Trip&quot; THEN AVG([Avg_Spending_Trip])&#10;END' />
            </column>
            <column caption='Average Stay' datatype='real' name='[Calculation_413134956037373953]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Avg_Stay] * [Tourists_Number]) / SUM([Tourists_Number])' />
            </column>
            <column caption='Average Spending per Trip' datatype='real' name='[Calculation_413134956037521410]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Avg_Spending_Trip] * [Tourists_Number]) / SUM([Tourists_Number])' />
            </column>
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Albaha&quot;' value='&quot;Al-Baha&quot;' />
                <semantic-value key='&quot;Alqassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Aseer&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Eastern_region&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hail&quot;' value='&quot;Hail&quot;' />
                <semantic-value key='&quot;Jazan&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Jouf&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Madinah&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Makkah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Najran&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Northern_borders&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Tabouk&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column caption='Tourism Type' datatype='string' name='[Tourism_Type]' role='dimension' type='nominal' />
            <column caption='Tourists Number' datatype='integer' name='[Tourists_Number]' role='measure' type='quantitative' />
            <column caption='Tourists Spending' datatype='integer' name='[Tourists_Spending]' role='measure' type='quantitative' />
            <column caption='Years' datatype='date' name='[YEARS]' role='dimension' type='ordinal' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism_Type]' derivation='None' name='[none:Tourism_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourists_Number]' derivation='Sum' name='[sum:Tourists_Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tourists_Spending]' derivation='Sum' name='[sum:Tourists_Spending:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YEARS]' derivation='Year-Trunc' name='[tyr:YEARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_413134956029976576]' derivation='User' name='[usr:Calculation_413134956029976576:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_413134956037373953]' derivation='User' name='[usr:Calculation_413134956037373953:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_413134956037521410]' derivation='User' name='[usr:Calculation_413134956037521410:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.018gl0y092k29o1981vhw11o8vny].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Number:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Spending:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037373953:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037521410:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.018gl0y092k29o1981vhw11o8vny].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Number:qk]&quot;</bucket>
              <bucket>&quot;[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Spending:qk]&quot;</bucket>
              <bucket>&quot;[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037373953:qk]&quot;</bucket>
              <bucket>&quot;[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037521410:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[:Measure Names]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.018gl0y092k29o1981vhw11o8vny].[:Measure Names]' value='294' />
            <format attr='height' value='45' />
            <format attr='text-format' field='[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Spending:qk]' value='c&quot;ر.س &quot;#,##0;-&quot;ر.س &quot;#,##0' />
            <format attr='text-format' field='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037521410:qk]' value='c&quot;ر.س &quot;#,##0,.00K;-&quot;ر.س &quot;#,##0,.00K' />
            <format attr='text-format' field='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956037373953:qk]' value='n&quot; &quot;#,##0&quot; Days &quot;;-&quot; &quot;#,##0&quot; Days &quot;' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.018gl0y092k29o1981vhw11o8vny].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]' num-steps='2' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#005430' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]' />
              <text column='[federated.018gl0y092k29o1981vhw11o8vny].[Multiple Values]' />
              <text column='[federated.018gl0y092k29o1981vhw11o8vny].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff' fontsize='16' italic='true'><![CDATA[<[federated.018gl0y092k29o1981vhw11o8vny].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' italic='true'><![CDATA[<[federated.018gl0y092k29o1981vhw11o8vny].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.018gl0y092k29o1981vhw11o8vny].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{52807961-56B6-4C22-A4B7-A8A84EDB4A1D}' />
    </worksheet>
    <worksheet name='Top Provinces by Tourism Performance'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#005430' fontname='Benton Sans Book'><![CDATA[Top Provinces By <[Parameters].[Parameter 1]>]]></run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='saudi_Tourism_Data_final' name='federated.018gl0y092k29o1981vhw11o8vny' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Tourists Number&quot;'>
              <calculation class='tableau' formula='&quot;Tourists Number&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.018gl0y092k29o1981vhw11o8vny'>
            <column caption='Avg Spending Trip' datatype='integer' name='[Avg_Spending_Trip]' role='measure' type='quantitative' />
            <column caption='Avg Stay' datatype='integer' name='[Avg_Stay]' role='measure' type='quantitative' />
            <column caption='Selected Metric' datatype='real' name='[Calculation_413134956029976576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;    WHEN &quot;Tourists Number&quot; THEN SUM([Tourists_Number])&#10;    WHEN &quot;Tourists Spending&quot; THEN SUM([Tourists_Spending])&#10;    WHEN &quot;Avg Stay&quot; THEN AVG([Avg_Stay])&#10;    WHEN &quot;Avg Spending Trip&quot; THEN AVG([Avg_Spending_Trip])&#10;END' />
            </column>
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Albaha&quot;' value='&quot;Al-Baha&quot;' />
                <semantic-value key='&quot;Alqassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Aseer&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Eastern_region&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hail&quot;' value='&quot;Hail&quot;' />
                <semantic-value key='&quot;Jazan&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Jouf&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Madinah&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Makkah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Najran&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Northern_borders&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Tabouk&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column caption='Tourism Type' datatype='string' name='[Tourism_Type]' role='dimension' type='nominal' />
            <column caption='Tourists Number' datatype='integer' name='[Tourists_Number]' role='measure' type='quantitative' />
            <column caption='Tourists Spending' datatype='integer' name='[Tourists_Spending]' role='measure' type='quantitative' />
            <column caption='Years' datatype='date' name='[YEARS]' role='dimension' type='ordinal' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism_Type]' derivation='None' name='[none:Tourism_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEARS]' derivation='Year-Trunc' name='[tyr:YEARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_413134956029976576]' derivation='User' name='[usr:Calculation_413134956029976576:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Makkah&quot;</bucket>
              <bucket>&quot;Riyadh&quot;</bucket>
              <bucket>&quot;Eastern_region&quot;</bucket>
              <bucket>&quot;Madinah&quot;</bucket>
              <bucket>&quot;Aseer&quot;</bucket>
              <bucket>&quot;Alqassim&quot;</bucket>
              <bucket>&quot;Jazan&quot;</bucket>
              <bucket>&quot;Tabuk&quot;</bucket>
              <bucket>&quot;Hail&quot;</bucket>
              <bucket>&quot;Albaha&quot;</bucket>
              <bucket>&quot;Northern_borders&quot;</bucket>
              <bucket>&quot;Najran&quot;</bucket>
              <bucket>&quot;Jouf&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]' scope='rows' value='false' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='tick-color' scope='cols' value='#00000000' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='tick-color' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]' value='c#,##0,K&quot; ر.س.‏&quot;' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#005430' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]</rows>
        <cols>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</cols>
      </table>
      <simple-id uuid='{C87EE85B-6668-4312-87C1-81E970DEAEB0}' />
    </worksheet>
    <worksheet name='Tourists Number &amp; Spending Over Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#205132'>Tourists Number &amp; Spending Over Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='saudi_Tourism_Data_final' name='federated.018gl0y092k29o1981vhw11o8vny' />
          </datasources>
          <datasource-dependencies datasource='federated.018gl0y092k29o1981vhw11o8vny'>
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Albaha&quot;' value='&quot;Al-Baha&quot;' />
                <semantic-value key='&quot;Alqassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Aseer&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Eastern_region&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hail&quot;' value='&quot;Hail&quot;' />
                <semantic-value key='&quot;Jazan&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Jouf&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Madinah&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Makkah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Najran&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Northern_borders&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Tabouk&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column caption='Tourism Type' datatype='string' name='[Tourism_Type]' role='dimension' type='nominal' />
            <column caption='Tourists Number' datatype='integer' name='[Tourists_Number]' role='measure' type='quantitative' />
            <column caption='Years' datatype='date' name='[YEARS]' role='dimension' type='ordinal' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism_Type]' derivation='None' name='[none:Tourism_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourists_Number]' derivation='Sum' name='[sum:Tourists_Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YEARS]' derivation='Year-Trunc' name='[tyr:YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Number:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <format attr='stroke-size' value='0' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Number:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='' />
            <format attr='background-color' id='refline0' value='#ffffff00' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='background-color' id='refline1' value='#ff26007f' />
            <format attr='stroke-size' id='refline0' value='1' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
            <format attr='stroke-color' id='refline0' value='#ff2600ce' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Number:qk]' />
            </encodings>
            <reference-line axis-column='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='none' scope='per-table' value='#2020-01-01 00:00:00#' value-column='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#005430' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='880' />
                <format attr='maxwidth' value='880' />
                <format attr='minheight' value='262' />
                <format attr='maxheight' value='262' />
                <format attr='aspect' value='0' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Number:qk]</rows>
        <cols>[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]</cols>
      </table>
      <simple-id uuid='{B2B80616-0761-4189-BAD0-742BEF7F81C6}' />
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#005430'>Tourism Distribution By &lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#005430'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontalignment='1' fontcolor='#005430'>&gt; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='saudi_Tourism_Data_final' name='federated.018gl0y092k29o1981vhw11o8vny' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Tourists Number&quot;'>
              <calculation class='tableau' formula='&quot;Tourists Number&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.018gl0y092k29o1981vhw11o8vny'>
            <column caption='Avg Spending Trip' datatype='integer' name='[Avg_Spending_Trip]' role='measure' type='quantitative' />
            <column caption='Avg Stay' datatype='integer' name='[Avg_Stay]' role='measure' type='quantitative' />
            <column caption='Selected Metric' datatype='real' name='[Calculation_413134956029976576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;    WHEN &quot;Tourists Number&quot; THEN SUM([Tourists_Number])&#10;    WHEN &quot;Tourists Spending&quot; THEN SUM([Tourists_Spending])&#10;    WHEN &quot;Avg Stay&quot; THEN AVG([Avg_Stay])&#10;    WHEN &quot;Avg Spending Trip&quot; THEN AVG([Avg_Spending_Trip])&#10;END' />
            </column>
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Albaha&quot;' value='&quot;Al-Baha&quot;' />
                <semantic-value key='&quot;Alqassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Aseer&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Eastern_region&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hail&quot;' value='&quot;Hail&quot;' />
                <semantic-value key='&quot;Jazan&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Jouf&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Madinah&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Makkah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Najran&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Northern_borders&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Tabouk&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column caption='Tourism Type' datatype='string' name='[Tourism_Type]' role='dimension' type='nominal' />
            <column caption='Tourists Number' datatype='integer' name='[Tourists_Number]' role='measure' type='quantitative' />
            <column caption='Tourists Spending' datatype='integer' name='[Tourists_Spending]' role='measure' type='quantitative' />
            <column caption='Years' datatype='date' name='[YEARS]' role='dimension' type='ordinal' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism_Type]' derivation='None' name='[none:Tourism_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEARS]' derivation='Year-Trunc' name='[tyr:YEARS:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_413134956029976576]' derivation='User' name='[usr:Calculation_413134956029976576:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.018gl0y092k29o1981vhw11o8vny].[Longitude (generated)]' field-type='quantitative' max='6423683.7295777258' min='2856903.324938525' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.018gl0y092k29o1981vhw11o8vny].[Latitude (generated)]' field-type='quantitative' max='3649020.995903343' min='1972787.2795837403' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]' num-steps='5' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='light-admin-0-boundaries-bg-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents-bg' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-dispute-sub' value='true' />
            <format attr='enabled' id='light-admin-0-boundaries-sub' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-supress' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-sm-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-md-parents' value='true' />
            <format attr='enabled' id='light-admin-1-boundaries-lg-parents' value='true' />
            <format attr='enabled' id='light-admin1-water-lines-usa-tableau' value='true' />
            <format attr='enabled' id='light-9-dash-line-casing' value='true' />
            <format attr='enabled' id='light-9-dash-line' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='light-admin-1-label-9th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-8th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-7th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-6th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-5th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-4th-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-3rd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-2nd-tier' value='true' />
            <format attr='enabled' id='light-admin-1-label-1st-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-3rd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-2nd-tier' value='true' />
            <format attr='enabled' id='light-us-admin-1-label-abbr-1st-tier' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]' />
              <tooltip column='[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]' />
              <text column='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' />
              <geometry column='[federated.018gl0y092k29o1981vhw11o8vny].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#000000' fontname='Benton Sans Book'><![CDATA[Province: <[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]> ]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000' fontname='Benton Sans Book'><![CDATA[<[Parameters].[Parameter 1]>: <[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.018gl0y092k29o1981vhw11o8vny].[Latitude (generated)]</rows>
        <cols>[federated.018gl0y092k29o1981vhw11o8vny].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BE374619-ED6A-40F5-A888-BB0745034007}' />
    </worksheet>
    <worksheet name='tourism % by province'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#205132'>Tourism Type % By &lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#205132'>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</run>
            <run bold='true' fontalignment='1' fontcolor='#205132'>&gt; Province</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='saudi_Tourism_Data_final' name='federated.018gl0y092k29o1981vhw11o8vny' />
          </datasources>
          <datasource-dependencies datasource='federated.018gl0y092k29o1981vhw11o8vny'>
            <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Albaha&quot;' value='&quot;Al-Baha&quot;' />
                <semantic-value key='&quot;Alqassim&quot;' value='&quot;Al-Qaseem&quot;' />
                <semantic-value key='&quot;Aseer&quot;' value='&quot;Aseer&quot;' />
                <semantic-value key='&quot;Eastern_region&quot;' value='&quot;Eastern Region&quot;' />
                <semantic-value key='&quot;Hail&quot;' value='&quot;Hail&quot;' />
                <semantic-value key='&quot;Jazan&quot;' value='&quot;Jazan&quot;' />
                <semantic-value key='&quot;Jouf&quot;' value='&quot;Al-Jouf&quot;' />
                <semantic-value key='&quot;Madinah&quot;' value='&quot;Al Madinah&quot;' />
                <semantic-value key='&quot;Makkah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
                <semantic-value key='&quot;Najran&quot;' value='&quot;Najran&quot;' />
                <semantic-value key='&quot;Northern_borders&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
                <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Tabouk&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Tabuk&quot;' value='&quot;Saudi Arabia&quot;' />
              </semantic-values>
            </column>
            <column caption='Tourism Type' datatype='string' name='[Tourism_Type]' role='dimension' type='nominal' />
            <column caption='Tourists Number' datatype='integer' name='[Tourists_Number]' role='measure' type='quantitative' />
            <column caption='Tourists Spending' datatype='integer' name='[Tourists_Spending]' role='measure' type='quantitative' />
            <column caption='Years' datatype='date' name='[YEARS]' role='dimension' type='ordinal' />
            <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism_Type]' derivation='None' name='[none:Tourism_Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourists_Number]' derivation='Sum' name='[pcto:sum:Tourists_Number:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Tourists_Number]' derivation='Sum' name='[sum:Tourists_Number:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tourists_Spending]' derivation='Sum' name='[sum:Tourists_Spending:qk]' pivot='key' type='quantitative' />
            <column-instance column='[YEARS]' derivation='Year-Trunc' name='[tyr:YEARS:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]</column>
            <column>[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='404' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' />
              <wedge-size column='[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Number:qk]' />
              <text column='[federated.018gl0y092k29o1981vhw11o8vny].[pcto:sum:Tourists_Number:qk]' />
              <text column='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' />
              <text column='[federated.018gl0y092k29o1981vhw11o8vny].[sum:Tourists_Spending:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A114F3D5-8BDD-430D-8CBD-DEC4B73A0FB2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='saudi_Tourism_Data_final' name='federated.018gl0y092k29o1981vhw11o8vny' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Select Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Tourists Number&quot;'>
          <calculation class='tableau' formula='&quot;Tourists Number&quot;' />
          <members>
            <member value='&quot;Tourists Number&quot;' />
            <member value='&quot;Tourists Spending&quot;' />
            <member value='&quot;Avg Stay&quot;' />
            <member value='&quot;Avg Spending Trip&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.018gl0y092k29o1981vhw11o8vny'>
        <column datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <semantic-values semantic-role='[State].[Name]'>
            <semantic-value key='&quot;Albaha&quot;' value='&quot;Al-Baha&quot;' />
            <semantic-value key='&quot;Alqassim&quot;' value='&quot;Al-Qaseem&quot;' />
            <semantic-value key='&quot;Aseer&quot;' value='&quot;Aseer&quot;' />
            <semantic-value key='&quot;Eastern_region&quot;' value='&quot;Eastern Region&quot;' />
            <semantic-value key='&quot;Hail&quot;' value='&quot;Hail&quot;' />
            <semantic-value key='&quot;Jazan&quot;' value='&quot;Jazan&quot;' />
            <semantic-value key='&quot;Jouf&quot;' value='&quot;Al-Jouf&quot;' />
            <semantic-value key='&quot;Madinah&quot;' value='&quot;Al Madinah&quot;' />
            <semantic-value key='&quot;Makkah&quot;' value='&quot;Makkah Al-Mokarramah&quot;' />
            <semantic-value key='&quot;Najran&quot;' value='&quot;Najran&quot;' />
            <semantic-value key='&quot;Northern_borders&quot;' value='&quot;Al Hudud ash Shamaliyah&quot;' />
            <semantic-value key='&quot;Riyadh&quot;' value='&quot;Al-Riyadh&quot;' />
            <semantic-value key='&quot;Tabuk&quot;' value='&quot;Tabouk&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;Tabuk&quot;' value='&quot;Saudi Arabia&quot;' />
          </semantic-values>
        </column>
        <column caption='Tourism Type' datatype='string' name='[Tourism_Type]' role='dimension' type='nominal' />
        <column caption='Years' datatype='date' name='[YEARS]' role='dimension' type='ordinal' />
        <column-instance column='[Province]' derivation='None' name='[none:Province:nk]' pivot='key' type='nominal' />
        <column-instance column='[Tourism_Type]' derivation='None' name='[none:Tourism_Type:nk]' pivot='key' type='nominal' />
        <column-instance column='[YEARS]' derivation='Year-Trunc' name='[tyr:YEARS:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='horz' type-v2='layout-flow' w='100000' x='0' y='0' />
        </zone>
        <zone h='97975' id='3' param='vert' type-v2='layout-flow' w='14553' x='650' y='2025'>
          <zone fixed-size='193' h='25125' id='4' is-fixed='true' param='/Users/apple/Desktop/Saudi Tourism Project/download.jpg' type-v2='bitmap' w='14553' x='650' y='2025'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='13500' id='14' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14553' x='650' y='27150'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='37250' id='12' name='KPI' param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' type-v2='filter' w='14553' x='650' y='40650'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='8625' id='10' name='KPI' param='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14553' x='650' y='77900'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='11125' id='11' name='KPI' param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' type-v2='filter' w='14553' x='650' y='86525'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='13038' id='5' name='KPI' show-title='false' w='70569' x='15366' y='253' />
        <zone h='32911' id='13' name='map' w='38943' x='15366' y='12911' />
        <zone h='20759' id='15' name='tourism % by province' w='39000' x='15200' y='78987' />
        <zone h='32911' id='16' name='Tourists Number &amp; Spending Over Years' w='45300' x='54600' y='12911' />
        <zone h='33291' id='17' name='Top Provinces by Tourism Performance' w='38943' x='15285' y='45823' />
        <zone h='53797' id='19' name='Avg Stay vs. Avg Spending Scatter' w='45000' x='54700' y='45823' />
        <zone h='20750' id='26' is-scaled='1' param='/Users/apple/Desktop/Saudi Tourism Project/download-1-removebg-preview.png' type-v2='bitmap' w='14167' x='86167' y='-3875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='55' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000'>
                <zone fixed-size='166' h='20750' id='26' is-fixed='true' is-scaled='1' param='/Users/apple/Desktop/Saudi Tourism Project/download-1-removebg-preview.png' type-v2='bitmap' w='14167' x='86167' y='-3875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='37250' id='12' mode='checkdropdown' name='KPI' param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' type-v2='filter' w='14553' x='650' y='40650'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8625' id='10' name='KPI' param='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14553' x='650' y='77900'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11125' id='11' mode='checkdropdown' name='KPI' param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' type-v2='filter' w='14553' x='650' y='86525'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='104' h='13038' id='5' is-fixed='true' name='KPI' show-title='false' w='70569' x='15366' y='253'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='193' h='25125' id='4' is-fixed='true' param='/Users/apple/Desktop/Saudi Tourism Project/download.jpg' type-v2='bitmap' w='14553' x='650' y='2025'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='32911' id='13' is-fixed='true' name='map' w='38943' x='15366' y='12911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='32911' id='16' is-fixed='true' name='Tourists Number &amp; Spending Over Years' w='45300' x='54600' y='12911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13500' id='14' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='14553' x='650' y='27150'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='266' h='33291' id='17' is-fixed='true' name='Top Provinces by Tourism Performance' w='38943' x='15285' y='45823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53797' id='19' is-fixed='true' name='Avg Stay vs. Avg Spending Scatter' w='45000' x='54700' y='45823'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='166' h='20759' id='15' is-fixed='true' name='tourism % by province' w='39000' x='15200' y='78987'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ACB0F8E1-D637-411B-8A32-C33B910B34F1}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='KPI'>
      <cards>
        <edge name='left'>
          <strip size='138'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' type='filter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[:Measure Names]</field>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5EC8252E-2759-4913-A6C7-FA5FFE26EF32}' />
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' type='filter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]</field>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourists_Number:ok]</field>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[none:YEARS:qk]</field>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[usr:Calculation_413134956029976576:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{C0B6DEB6-8116-40E8-AFF0-675C893929B7}' />
    </window>
    <window class='worksheet' name='Tourists Number &amp; Spending Over Years'>
      <cards>
        <edge name='left'>
          <strip size='176'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' type='filter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[yr:YEARS:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CF37641-EF5C-400A-B774-0E0F79AB7FE5}' />
    </window>
    <window class='worksheet' name='Top Provinces by Tourism Performance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='radiolist' param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB90FC0A-19B0-41AB-9223-EA25C0787022}' />
    </window>
    <window class='worksheet' name='Average stay by province'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' type='filter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1927D7B4-CA94-47C6-B2C6-36D42399E06C}' />
    </window>
    <window class='worksheet' name='tourism % by province'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' type='filter' />
            <card mode='radiolist' param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</field>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B03CEB89-EB6A-4C9E-A6C7-F43BDC18FC38}' />
    </window>
    <window class='worksheet' name='Avg Stay vs. Avg Spending Scatter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[tyr:YEARS:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Tourism_Type:nk]' type='filter' />
            <card param='[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.018gl0y092k29o1981vhw11o8vny].[none:Province:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80C9E8DD-3DDA-4B7D-AC82-BA7CB6FC54CD}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Avg Stay vs. Avg Spending Scatter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top Provinces by Tourism Performance'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Tourists Number &amp; Spending Over Years'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='tourism % by province'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{4759C175-E5E5-4213-BB47-748CB8B4029B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average stay by province' width='192'>
      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
      2v0AwP8DTvSKrLSzi0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Avg Stay vs. Avg Spending Scatter' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcV0lEQVR4nO2dSXAc2Znff7nUvmHfFxIgsZBAk72SLYkSNdNttaTQSNOHbjtsKXywfbHD
      B998cejiCB98tBzhsHUaS+OQFBMdkiLGo5XdzZY8JJtsNhsk0SCIfakqVBVQe1ZVZvoAVYoA
      QbISa4H5fhEIoFAvv3rv1fvn2773pWSapolA4FDko86AQHCUqHu52DAMDMNAkiRb18hybbqz
      k1bYrt98HKTt6gCm1ja43XbNAjBNk6WlJbq6upibmyMcDtPU1IQkSbYEYCezdtMeV9t261CU
      ce95qWJLAIlEgo6ODhoaGlhdXaW5udkyuFsF7lfa42rbNE0kSXque4CDLiOwa9u25gCSJFEo
      FLh//z79/f12LhUI6hJbAujs7MQ0TQYHB9F1/aDyJBAcGjUPgWRZprW1FYBwOHxgGRIIDhOx
      DCpwNEIAAkcjBCBwNEIAAkcjBCBwNEIAAkcjBCBwNLac4R71nLbrqyEQ1CM19wCGYfDxxx9b
      v8VOsOB5oOYeQJIkGhoakCSJpqYmTNO03KHtnKmxIxy7IjuOtk3TtH6OMh8Hafsgy1i1WXWK
      s2u7ZgEYhkEqlSIWi5FKpfD7/XR0dGCaJrIs2xoSqWrtIy87aY+j7eqNRFGUI83HQdo+yDLa
      9Qbdbrvm0iqKwquvvgpAR0dHzR8mENQzYhVI4GiEAASORghA4GiEAASORghA4GiEAASORghA
      4GiEAASORghA4GiEAASOxpYAMpkMpmmSTCbRNO2g8iQQHBq2nOHu3r3L+Pg48XicWCzG8PAw
      gC1vUDtegXbSHlfbdj0lRRkfT/vob7u2bQXGam5uxjAMvF4vhULB8vKz4wlqmmbN7q520h5n
      27W68h50Po5rGR/9bdd2zQLQdR3DMKyG39XVhSzLtt2hK5VKza6udtIeV9vVwLG1ugqLMm7F
      rjv0dtu23KGHhoYArBCJAsFxR6wCCRyNEIDA0QgBCByNEIDA0QgBCByNEIDA0QgBCByNEIDA
      0QgBCByNEIDA0dgWQLlc5t69e6yurh5EfgSCQ8Ve4Eg2BZDP58nlcrS1tYnguHtMK4Lj7t02
      HEJw3Cper5dQKISiKLvyBoXjF9z1IG2L4Lh7s31owXGryLLM4OCgrcIIBPXKribBovELnhfE
      KpDA0dgeAgmOHsMwmE0lyJVKDDS3EHB7jjpLxxYhgGPI76c/59r8DACNPj/ffeWiEMEuEUOg
      Y0bFMPhkad56nSrkmU7EjzBHxxshgGOGLEn4XO4t//Nvey2oHSGAOiKVT/L3937BB9O/o1Qp
      7ZhGliS+NnKWiNeHS1F4uaefk00th5zT5wcxB6gTMsU03/+//5F4NgrAJ0s3+XeX/gOy9Pg9
      arC5lX/z+iUMw8SlKOKh5XtA9AB1wr3ohNX4AT5e+EdyWhaAUqnEysoKqVTKej+VSOJWVdH4
      94joAeqE5kALsiRjmJtb+xFvA251c2y/vr7OT3/6U86dO0ckEiGdTtPa2sof/vAHTp8+zcTE
      BH19faysrPDtb39biMIGtnsA0zQpl8u2HOAEz+Zk8yDvvvgvCHsjdIa7+Nev/1s8qtd6//z5
      83zyySfMz88zPz9PPB4nEAhQLBZZW1sjkUjQ0dFBpVI5wlIcPyTTZksulUpcv36dSCTC2NgY
      uq6L0Ih7SFuLo1ipVKJcLrO2tkY+n8c0TZaXl3nllVcAmJycZHBwEJfLRSgUshzDjlMZd2t7
      r6ERbQugUChw9+5dvF4vo6Oj6Lpuq8vVdb3mirCT9rjYNpIPKX/2d+AJ4j73z8ATZnJykv7+
      fqLRKK2trZimydzcHD09PUQikcdsy7KMruvPbCT1Un9VV+haG6ld20DNbXC7bdtzAJfLRTAY
      JBwOC3dom2mNXJzi3/0rzEISgPLKTXx//T94+PAhDx8+xOfz8d577/H666+zsbFBZ2fnjnZU
      VcXlcu17nu2mfx7coW3PAVRVZXh4mM7OTruXOh595bbV+AH0pVuYhXWam5u5fPkyyWSStrY2
      dF3H7Xbb+lIFu0OsAh0icuNJkFUwNieqUrgTPEEuXryIoii8++67GIYhGv4hImp6F5imSTqn
      kcoUbK2GyU0DeL/2n5HbzqD0vobvG/8V6ZGVHrDXlQv2jugBbGKaJr/84xQ//s0ddN3g6xdO
      8S+/fr6mOZAkSbhGvolr5Jtb7AmODnG7scl6tsj//tWn5ItltLLOe1cnmV1df+o1pVKJGzdu
      HFIOBXYQPYBNyhUDXd8agaBYevrm0+3bt1lcXCSTyRAMBllcXERVVTY2NmhpaWF2dpbvfve7
      BAKBg8y6YAdED2CTlgY/Xznfb71+YbCd0z3NT71maWmJUqmEYRjcuXOHhYUFJEmyfr/44oui
      8R8RtjfCtuPEneCKbjA5v0a5YnDmRCtul/LEtLAZS0lRFHK5HKZpoqqqFU9JURQURcHjqe1E
      13Gsv3reCRZDoBoxDANN0zYnsi4XZ0+2AZvje9N8+g2gumkVCoUee6/aOARHgxBADSQSCX7y
      k58wNjaGLMsUi0XGxsaYmZkhl8vh8/no6+sjGo3y0ksvHXV2BTYQc4AauHHjBuVymVQqhaIo
      tLS0cO3aNW7fvk25XMblcjE9Pc2tW7dshyMUHC22e4BKpcLc3Bwul4u+vr6DyFPdMTAwwIUL
      F7hz5w7Nzc3MzMzQ39+PqqoMDAwQCARYWlqir68PSZLE2v4xYleT4EwmQzKZpLe3V3iD7jHt
      QXpKOqGMh+4NCjA/P8+ZM2esu53wBt19WhEcd2+2D90bFGB4eFgcuxM8F+xKAHbvKgJBvbKj
      AAzD4KOPPmJiYkKcMa2BbDnDvdSnLOcWxAT4mLHjrbx68D0ej2OaJmNjY4edryPHMAxmZ2cZ
      GBh4arp0aZ0fP/if5CoZJCQud73FCw2vHmje9IrG0tTP0fJrdJ36BoFI/7MvEuzIEwWwsLBA
      JBLhK1/5ymHnqS6onsv93e9+R19fHxMTE1y6dIkPP/yQvr4+KpUK77zzDvfWPyVXyWxeg8nH
      8T8erABMkzsf/CdWpv8egLnPfswX3v4/+EPdLC4u0tPTsyX5Rx99xGuvvVbzEUqnsaMAJEli
      dHSU5eVlTNN05IT39u3bZDIZKpUKKysrhMNhFhYWcLvdNDc34/F4ME0Tn+Lfcp1P9WMCumEi
      SZuhDPcTwygRnfu99bqsbZBY+kf8I2/z4MEDpqamSKfT9PX10dXVxc2bN3n11YPtkY4zOwog
      Go3y4MEDAoGAY8e0Y2NjvPTSS9a6caVSQVGUx9azRxvPMZuZ4mFmipArzBfb3+LDmQzL6RIN
      PpVLAxEi3v1bNJAkFX+oh2zqwZ/+IeMP95FOp4nH45a/USwWw+fzce7cOdxuETz3Sey4ETY/
      P08qlaJYLPLaa689tQdwojfodgzTQNOLuGQX96Ilbi5lrfd6Gzz8xamGJ9rdjadkLjXJ3T/8
      F7T8Gn1n3uXkC9+jWNTQNA232025XLZCp/j9/poFsOf6M0349DZ8PgnBIFz8AjQ2Hj9v0MnJ
      SdbXN6MVOHUIZAdZkvGpm0OhQrm45b18af99gyKtZ3n923+z5X8+nw+fz7flf3ZFvmeWFuHj
      65t/Z9Lw4fvwV985vM/fBTvWzqVLlyiXy0DtW8yCTQaavTxYK1A2TCRgqNX/zGvsUMjnmX04
      TTAUov/kQH0dot/Y2Pb66UdF64EdBeByufjtb39LU1MTFy5cECKwQbPfxVtDEeJ5nQafSltw
      /1Zfcrks/+u//zfi0c0o0pffeJM3v/HN+vl+unvA5YI/3Tw5cfJo81MDT1wGLZVKRKPRHSvX
      rgPS80rVycswDGuoIUkQ9io0BT1b0m2+t7f6mrx712r8AH+8+iF/8U++hlovS5yRCHzzr2Bm
      GgJBOD101Dl6Jk8cIMqyTD6fZ2JiYstGmK7rfPbZZ/T29tLU1HQomaxXFhcXuXHjBh0dHYyN
      jXH//n06OzvZ2NigoaGBSqXCxsYGjX+aCFZvKC+88MKuVmZ8vq3DKa/Xh1QnQyBrrtjUtPnz
      p//xp5tEvfLEfYCWlhYqlcpjx/g0TWNjYwO3201DQ4N1trVW7BwYsXu45LBtVw/EZLNZrly5
      QmNjI0tLS8RiMbq7uzFNk3w+TzweJ5vN0traSiaTYXJyktHRUeDPvUgtdThw+jR/+bW3mJ6a
      IhgK8vJrFzFN84nuKodRf7/85S8Jh8M0NDTQ2NiILMvEYjFCoRDJZJJYLEYul+P111+v+fyI
      nXxU663WY6Xbbe8oAF3XuXXrFu3t7Vy6dGnLez6fj/7+foLBoOOD47788sv4/X4SiQSqqvL+
      ++9z7tw5WlparBWZfD7PqVOnkGWZUChEuVxGVVXLlp0lQlVV+cobb/KXb31913nez/SqqrK6
      uko2m0VVVZLJzbinpmly+/ZtxsfHcbvddHR0sLCw8Ey3kt3kY6/u0DvuA+i6zsTEBOVymZde
      eknsA9SYvtq4awldXuVZAlhaWuLjjz/m4sWLtLW1ce/ePav3APj8888ZGtp5rH0Y9Tc7O0su
      l8Pj8RCNRmlrayMajeL1ellfX6exsZHOzk5KpRInTpzY93wcWFSIu3fvcvJk/c/i64mD8Lfp
      7u5mamoKTdP4wQ9+QHt7Ozdu3KCnp4fGxkZWVlaYn5/njTfe2PfProVHG3VzczMNDQ2cPn16
      S5p6jnzxxFUgr9eLpmliI6xO+PzzzymXy+i6TjAYJJ1OMz8/TzgcplgsPtvAIdDY2HjUWbDN
      EyfBsHn2VzT+o+fLX/4yAF/60peAze+n6p8kvDz3xo4DJ0mSaG9vFxEO6gRZlpFlGY/Hg6Io
      uN1uK5pc9T3B7nhizRmGQUdHh+gBBM81Ow6Bbt26RTQaFQFb6w3TBC0D61EIdoAnsrn1LNg1
      Owqgr6+PTCZDqVQ67PwInkZ6EfXTv4FKERQ3jP9zaDzJlStXaG9v37I8mk6nURTF9j5ALBaj
      ra1tv3Net+xYO62trVy+fFmM/+uNpWubjR9AL8Hi/4PGk0xPT9PW1sYvfvELPB4PMzMzdHV1
      WSHYW1tbMQwDXddpbGzkrbfeAuCHP/whkUiEWCzG8PAwCwsLjIyMMDExQTwex+/3k8/neeed
      d46w0AfLU2dPkiSJOUA9oWxb8VE2/YmqfkVzc3OkUim8Xi+KomAYhrVL+9WvfpWenp4tw9qh
      oSG8Xi8ej4dMJkO5XKZYLFo9fyQSee6fBiqeD3DEtm2dliokMe/8LVI+Dr5mGP+n4G+lXC4j
      SZK1LKppGl6vl2KxiCzLuFwuy22lXC5z79493G43IyMjwGaI9/n5eWZmZnjzzTcxDINKpWIJ
      a6dVJsc+H8A0Te7du0dHR4fjvUEPG0MOsD7hQ7u1iueFbhrOhZD58w509Yv1+ze9Rt1u91a/
      F0nC4/Fw/vz5LXa9Xi9DQ0MMDAxYy6pOCX5mu5SGYZDL5dA0DcMwHO0Nuh9p7XiDZn7xS7L/
      8BsAyr/5PfgChN998vj8OJZxN7Zhn71Bn/WBDQ0NJJNJOjs7He0Nuh9p7QwPKgsLW1/PLzzz
      c45bGe3a3qs3qG0BqKrK4OCgmBwfAb4XX6Rw7frmfgDge+nFI87R8WdXAz2x9X40BL58CVNV
      Kd+/j2d4GP8Xv3DUWTr2OGOms1dMk3LiA7SN68ieNjxdf43senKsn4NCkmV8Fy8Q+tIXD/2z
      n1eEAGqgkvmM8vLfAiZ6bgqzksE/+O/3ZNM0TX72s58xOjpKf38/uq7j8/mIRqPk83mSySRn
      z57FNE3cbrc1ecvlcnR0dABw8+ZNuru7aWhoIJvNEgwGrWeZbWxs0NHRQSgUolQqUSgUaGlp
      Eb33NoQAakDPzwHmI69n9mzTNE1isRiGYTA/P2+dLR4YGCCXy5FKpUgmk0xPTxMOh6lUKnR2
      dpLP53n77betI4iLi4tomkYoFCIej9Pd3Y1hGKyvr/OjH/2IEydOcP78eT799FO+973v1fw8
      Yqcgbgc1oIRGQXrkuVLhvYeLlySJCxcukEgkcLvdyLLMyMgI4+Pj6LrOwMAA7e3ttLe3Mz4+
      zsWLF+ns7OTUqVMkk0lWVlZQVRVJkqwIFIODgwwPD7O+vk4kEmFsbIzx8XHOnDlDY2OjdWZX
      8GfETnAtmCbF1CeYmVvInlbcrW8gKb4nJre7S1qtw+rwxDAM6+/tMYUqlQrpdBpN02hubrZE
      8GjQ3ur1j+ajlgfP1cVut03b4knxh4EkoYbHUZsOZtlRkqQtX+Cjf+90Y9lpB/7RdDs1Bjtr
      8E5CCGAb09PTZLNZSqUSra2tNDY2EgqFmJqasp4Qn8/n8fv9FItFHjx4wKlTpx6LnyQ4HggB
      bCORSJBMJikWi6RSKW7evMmLL75IPp+nWCySz+dZWVmhv7+fX/3qV4yMjDA9Pc3bb78tVliO
      IUIA2/B4PAQCAfx+PwsLC/T29lIqlSiVSng8HoLBIOPj49y5c4fu7m7a2trw+Xzi7MQxZVcC
      eJ6D4547d876+9EnnGuatmUJcWhoyNbTzwX1ya6+vfv37zM1NbXfeak7Hp2cbp9Ebp+4Co4n
      tnuAfD5vHZgX7tB7T3uQrsJOKONe3aF3tQ9Q3Wlsampyxj7AAdo+yDVyJ5Rxr/sAu+rDZVkW
      p8EEzwViECtwNEIAAkcjBCBwNEIAAkcjBCBwNEIAAkcjBCBwNEIAAkcjBCBwNEIAAkdjWwCG
      YTA9PU08Hj+I/AgEh4ptb1BJkjAMg0QiQXNzs/AG3WNa4Q26d9twiMFxq8+pXV1dtWLOi+C4
      u097kIFj7aY9KNv1HBzX9hBIURT8fj9nz561e6lAUHfsaggUiUQOIi8CwaEjVoEEjkYIQOBo
      hAAEjkYIQOBohAAEjkYIQOBohAAEjkYIQOBohAAEjmZXArDj2CQQ1DO2BaDrOg8ePGBycvIg
      8iMQHCq2fYFkWcYwDMsVWrhD7y2tcIfeu204RHfoSqVCNpulqalJuEPvQ1rhDr0323t1h7Yt
      AJfLxcsvv2z3MoGgLhGrQAJHIwQgcDRCAAJHIwQgcDRCAAJHIwQgcDRCAAJHIwQgcDRCAAJH
      IwQgcDS7EsDa2ppwhxY8F9j2BTJNk7m5ORoaGlAUxXJ0qtUZrupBut9pj6ttJ9TfQZfRDttt
      76oHCIfDtj+4ih2vUTtpj7PtesnHcSzjXm3b7gEMw8DtdpNOp2lpaUGSJFvu0IZh1Oy6aift
      cbVdHUoehG0nlLHKbm3bFoCiKPT399u9TCCoS8QqkMDRCAEIHI0QgMDRCAEIHI0QgMDRCAEI
      HI0QgMDR7EoAsViMYrG433kRCA4d2wLI5/NkMhlmZ2cPIDsCweGyqx6g6gQnEBx3bAvA5/Mh
      yzK9vb0HkR+B4FCRzD3cyg3DQNd1JEmq2RlO1/WaY0TaSXtcbVeDxtbqzCXKuJWqm/Vu259t
      Z7hH2W1wXDtfip20x9H2bgLHijL+mWq7s+M9um8CsPvBdtML289HPg7Stt2zA9ttK9///ve/
      b8vCDhmorgz5/f4d02QyGVKpFIqisL6+jiRJbGxs4PP5dixANptFkiRisRgej4dYLGbNPbaT
      z+dJJpMA5HI5KpUK+Xwen8/3WFpd11leXsbv9xONRvH5fKysrBAIBB6znc/nMQyDXC6HpmmU
      SiUKhQKapqFpGl6v10prmiYbGxsoivKY/dXVVQKBwJZyVstnmib5fJ5CoUCpVCKXy6HrOm63
      20prGAbpdBq3283S0hI+n49oNIrX6yUWixEMBrfY3tjYwO12E4/HMU2TRCJh5cPv928pZyKR
      oFgsUiqVnlnGUqnE8vIyPp+vpjLGYjEqlQqqqj6zjMVikWg0SiAQsD7jSWU0TZNoNApAKpWy
      6tM0TdLpNLAZwbxKOp0mlUrhcrlIJBJW3VRf72kOUOXu3bsYhsHY2NiO72cyGaampnC5XLjd
      bjRNQ1EURkdHH2t4uq5z7do1mpqa8Pl8zM/Pc+LECTRNY3Bw8DHb169fp7Ozk3Q6bR12ME2T
      s2fPPpZ2ZWWFhYUFJEmiu7ubqakphoaGKJVKj51xWFhYADYrsNpYAevvR+3n83nL1urqKrFY
      jJ6eHqanpxkcHERRFDo6Oqz0k5OTtLS0kEqlKBQKKIpiDRFM0+TMmTNb6m5ubg5VVa3PDgQC
      LC4u0tnZSUNDAw0NDcBm47h9+zanTp1iYmKCbDbL0NAQs7OznDx5kkqlwokTJyzbqVSKmZkZ
      PB5PTWVcXFzE7/dTKpWIx+NPLWMikbDSF4vFp5Yxl8sxOztLoVCwThtWy9jR0UFjY6NVRsMw
      SCQSLC0toWkabrcbr9dLpVLB5XJhmiajo6Nb6m9iYoJgMIjL5aJcLuPz+VhfXycSiezPTrAk
      SU8ds8Xjcfr6+lBV1aqAJ6VPpVLous76+joul8s6gfakI5iqqpJIJIDNsV31hNpOlMtlWlpa
      0DQNj8dDpVLB4/HsuKTb0tICYM1vHj35tt2+3+/H5/NZd9H29nbcbvcT7Tc3NwObwQVSqdQW
      u9t7xFAohNvtRtd1PB4Pa2tr1uvqF15FkiSamprQdZ1AIGDdcCqVCm63+7F8LC0tMTw8XFMZ
      C4UCsiwTDAapVCq0tbU9tYyLi4sMDQ2RSCSeWcZ0Ok0oFMLr9eJ2u60yVr/7nfJ96tQpq9ep
      tqWd2pSiKFZ9qaqKYRhWu1JVde9DINjscmRZJhwO7/h+oVAgl8vR3t6Oruu0t7cjSRLhcPix
      yvD7/XR0dNDe3k4qlWJ4eJhEIkFvb++OTw3xer2oqkpTUxOqqhKJRHC73QSDwcfS+nw+UqkU
      o6OjxGIxxsfHWV1dpb+//7EvfHV1FcMwiEQi+P1+QqEQHo+HQCCA3+8nEAhYaTOZDNlsFkVR
      KJVKtLW1kUgkGBsbs3qDR+1Ho1HrLtjc3IyiKITDYSv/jw7f1tfXyeVy9PX1kU6nGRkZYW1t
      jZGREVKpFJ2dnVYdGobB2toaiqKgKAo9PT1sbGwwNjZGPB5/rJzZbJZyuUw4HMbv9xMMBvF6
      vTuWUdM08vk8qqqiaRrt7e1PLWMmk8EwDEZHR59ZRk3TyOVy9Pb21lTGal3LskxbWxuyLNPS
      0oJpmrS2tuLxeCzbVfH19fVRKBTo6+sjk8lw4sQJ8vn8/gyBBILjinCGEzgaIQCBoxECqCOu
      Xr1KLpezdU0sFuPXv/41+Xz+iWk+++wz5ubmara5vLzMe++9x9LSEoCta48be94IE+wPlUqF
      mZkZkskkra2trKyssLy8TFdXF5qmEYlEgM1JcXXt/dy5cwQCAVKpFNevX2dqaoq2tjaWl5dp
      b2+nq6uL+fl5stks/f39vP/++wQCAWsp8NVXX+XnP/853d3dPHjwgFOnTmEYBt/61resz7py
      5QpdXV1cuXKFSCTCd77znaOspn1H9AB1wvLyMrIsk81muXr1qrWCUyqVuHTpEtPT08RiMWvT
      bW1tDUmSiEQiZLNZaz2/unoFcPr0aTKZDC6Xi0KhYC1dVjfgqsuj8XicYrFIsVjk0qVLyLKM
      oiiUy2UuX75MoVCgUqlQLpePuJb2H7EKVCdUG61hGNbaeqFQwO12oygKxWIRVVX54IMPaGlp
      YXh42Noc0zSNhw8f0t3dTSQSoVgsWtdpmmY1aNjcLLt69SrhcJje3l6SySSnT5/eco0kSVuc
      HA3D4Nq1a7zyyitbdlmfB4QABI7m/wPntwcVYtDlCAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='49' name='KPI' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top Provinces by Tourism Performance' width='192'>
      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
      XVr367YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tourists Number &amp; Spending Over Years' width='192'>
      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
      1/4/fzVoK02nApIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='tourism % by province' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
